// Code generated by MockGen. DO NOT EDIT.
// Source: btcstaking-tracker/stakingeventwatcher/indexer.go

// Package indexer is a generated GoMock package.
package stakingeventwatcher

import (
	context "context"
	reflect "reflect"

	indexer "github.com/babylonlabs-io/vigilante/btcstaking-tracker/indexer"
	gomock "github.com/golang/mock/gomock"
)

// MockSpendChecker is a mock of SpendChecker interface.
type MockSpendChecker struct {
	ctrl     *gomock.Controller
	recorder *MockSpendCheckerMockRecorder
}

// MockSpendCheckerMockRecorder is the mock recorder for MockSpendChecker.
type MockSpendCheckerMockRecorder struct {
	mock *MockSpendChecker
}

// NewMockSpendChecker creates a new mock instance.
func NewMockSpendChecker(ctrl *gomock.Controller) *MockSpendChecker {
	mock := &MockSpendChecker{ctrl: ctrl}
	mock.recorder = &MockSpendCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSpendChecker) EXPECT() *MockSpendCheckerMockRecorder {
	return m.recorder
}

// GetOutspend mocks base method.
func (m *MockSpendChecker) GetOutspend(ctx context.Context, txID string, vout uint32) (*indexer.OutspendResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOutspend", ctx, txID, vout)
	ret0, _ := ret[0].(*indexer.OutspendResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOutspend indicates an expected call of GetOutspend.
func (mr *MockSpendCheckerMockRecorder) GetOutspend(ctx, txID, vout interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOutspend", reflect.TypeOf((*MockSpendChecker)(nil).GetOutspend), ctx, txID, vout)
}
