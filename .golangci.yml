run:
  timeout: 5m

linters:
  disable-all: true
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - decorder
    - dogsled
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustive
    - forbidigo
    - forcetypeassert
    #    - gci
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - goheader
    - gomodguard
    - goprintffuncname
    #    - gosec
    - gosimple
    - govet
    - grouper
    - importas
    - ineffassign
    - loggercheck
    - maintidx
    - makezero
    - misspell
    - nakedret
    - nestif
    - nilerr
    #    - nlreturn # Style wise I personally like this one, todo(lazar): unlax at somepoint, good practice
    - noctx
    - nonamedreturns
    - nosprintfhostport
    - paralleltest
    - reassign
    - revive
    - rowserrcheck
    - sqlclosecheck
    - staticcheck
    - stylecheck
    - tenv
    - testableexamples
    - tparallel
    - typecheck
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - unused
    - wastedassign
    - whitespace
#    - wrapcheck # we really should be using this, lax for now todo(lazar): unlax at somepoint, good practice

issues:
  max-same-issues: 0
  # Default: https://golangci-lint.run/usage/false-positives/#default-exclusions
  exclude-dirs:
    - e2etest
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
    # Run some linter only for test files by excluding its issues for everything else.
    - path-except: _test\.go
      linters:
        - forbidigo
    # Exclude `lll` issues for long lines with `go:generate`.
    - linters:
        - lll
      source: "^//go:generate "